{"version":3,"sources":["components/CurrencyElement.js","components/Title.js","App.js","index.js"],"names":["CurrencyElement","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","id","className","type","value","onChange","map","currency","key","Title","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","response","json","data","rates","console","log","base","Object","keys","e","target","onClick","firstCurrency","aria-hidden","focusable","data-prefix","data-icon","class","role","xmlns","viewBox","fill","d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAyCeA,G,YAtCS,SAACC,GAAW,IAEhCC,EAKED,EALFC,gBACAC,EAIEF,EAJFE,iBACAC,EAGEH,EAHFG,iBACAC,EAEEJ,EAFFI,eACAC,EACEL,EADFK,OAEF,OACE,yBAAKC,GAAG,OAAOC,UAAU,aACvB,yBAAKD,GAAG,mBACN,yBAAKA,GAAG,kBACN,2BACEE,KAAK,SACLC,MAAOJ,EACPK,SAAUN,EACVG,UAAU,aACVD,GAAG,cAIP,4BACEA,GAAG,aACHC,UAAU,2BACVE,MAAOP,EACPQ,SAAUP,GAETF,EAAgBU,KAAI,SAACC,GAAD,OACnB,4BAAQL,UAAU,aAAaM,IAAKD,GACjCA,WCzBAE,G,MAJD,WACZ,OAAO,oDCCHC,EAAW,yCAwGFC,MAtGf,WAAgB,IAQVC,EAAUC,EARD,EACiCC,mBAAS,IAD1C,mBACNlB,EADM,KACWmB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNd,EALM,KAKEsB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KAqDb,OA5CID,GACFV,EAAab,EACbY,EAAWZ,EAASoB,IAEpBR,EAAWZ,EACXa,EAAab,EAASoB,GAmBxBK,qBAAU,WACY,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUT,EAAgBS,EAAKC,MAAMb,OAE/Cc,QAAQC,QACP,CAACjB,EAAcE,IAElBO,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLf,EAAmB,CAACe,EAAKI,MAAP,mBAAgBC,OAAOC,KAAKN,EAAKC,UACnDd,EAAgBa,EAAKI,MACrBf,EAAcgB,OAAOC,KAAKN,EAAKC,OAAO,IACtCV,EAAgBS,EAAKC,MAAMI,OAAOC,KAAKN,EAAKC,OAAO,UAEtD,IAGD,oCACE,yBAAK9B,GAAG,SACN,kBAAC,EAAD,OAEF,yBAAKA,GAAG,YAAYC,UAAU,aAC5B,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CACEN,gBAAiBA,EACjBC,iBAAkBmB,EAClBlB,iBAAkB,SAACuC,GAAD,OAAOpB,EAAgBoB,EAAEC,OAAOlC,QAClDL,eAhDZ,SAAgCsC,GAC9Bf,EAAUe,EAAEC,OAAOlC,OACnBoB,GAAwB,IA+CdxB,OAAQa,KAGZ,yBAAKX,UAAU,kBAAkBqC,QA1CzC,SAA8BF,GAC5B,IAAMG,EAAgBxB,EACtBC,EAAgBC,GAChBC,EAAcqB,KAwCN,yBACEvC,GAAG,eACHwC,cAAY,OACZC,UAAU,QACVC,cAAY,MACZC,YAAU,eACVC,MAAM,yCACNC,KAAK,MACLC,MAAM,6BACNC,QAAQ,eAER,0BACEC,KAAK,eACLC,EAAE,kZAIR,yBAAKhD,UAAU,mBACb,kBAAC,EAAD,CACEN,gBAAiBA,EACjBC,iBAAkBqB,EAClBpB,iBAAkB,SAACuC,GAAD,OAAOlB,EAAckB,EAAEC,OAAOlC,QAChDL,eAtEZ,SAA8BsC,GAC5Bf,EAAUe,EAAEC,OAAOlC,OACnBoB,GAAwB,IAqEdxB,OAAQY,S,MC/FtBuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.674e5375.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CurrencyElement.css\";\r\n\r\nconst CurrencyElement = (props) => {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    onChangeAmount,\r\n    amount,\r\n  } = props;\r\n  return (\r\n    <div id=\"card\" className=\"card pt-2\">\r\n      <div id=\"currencyElement\">\r\n        <div id=\"inputContainer\">\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={onChangeAmount}\r\n            className=\"form-label\"\r\n            id=\"inputBox\"\r\n          />\r\n        </div>\r\n\r\n        <select\r\n          id=\"selectItem\"\r\n          className=\"custom-select selectItem\"\r\n          value={selectedCurrency}\r\n          onChange={onChangeCurrency}\r\n        >\r\n          {currencyOptions.map((currency) => (\r\n            <option className=\"optionItem\" key={currency}>\r\n              {currency}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyElement;\r\n","import React from \"react\";\r\nimport \"./Title.css\";\r\n\r\nconst Title = () => {\r\n  return <h2>Currency Converter</h2>;\r\n};\r\n\r\nexport default Title;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrencyElement from \"./components/CurrencyElement\";\nimport Title from \"./components/Title\";\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [currencyFrom, setCurrencyFrom] = useState();\n  const [currencyTo, setCurrencyTo] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\n  let toAmount, fromAmount;\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  function handleSwapCurrencies(e) {\n    const firstCurrency = currencyFrom;\n    setCurrencyFrom(currencyTo);\n    setCurrencyTo(firstCurrency);\n  }\n\n  useEffect(() => {\n    if (currencyFrom != null && currencyTo != null) {\n      fetch(`${BASE_URL}?base=${currencyFrom}&symbols=${currencyTo}`)\n        .then((response) => response.json())\n        .then((data) => setExchangeRate(data.rates[currencyTo]));\n    }\n    console.log();\n  }, [currencyFrom, currencyTo]);\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((response) => response.json())\n      .then((data) => {\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n        setCurrencyFrom(data.base);\n        setCurrencyTo(Object.keys(data.rates)[0]);\n        setExchangeRate(data.rates[Object.keys(data.rates)[0]]);\n      });\n  }, []);\n\n  return (\n    <>\n      <div id=\"title\">\n        <Title />\n      </div>\n      <div id=\"container\" className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-md-5\">\n            <CurrencyElement\n              currencyOptions={currencyOptions}\n              selectedCurrency={currencyFrom}\n              onChangeCurrency={(e) => setCurrencyFrom(e.target.value)}\n              onChangeAmount={handleFromAmountChange}\n              amount={fromAmount}\n            />\n          </div>\n          <div className=\"col-12 col-md-2\" onClick={handleSwapCurrencies}>\n            <svg\n              id=\"exchangeIcon\"\n              aria-hidden=\"true\"\n              focusable=\"false\"\n              data-prefix=\"fas\"\n              data-icon=\"exchange-alt\"\n              class=\"svg-inline--fa fa-exchange-alt fa-w-16\"\n              role=\"img\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 512 512\"\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M0 168v-16c0-13.255 10.745-24 24-24h360V80c0-21.367 25.899-32.042 40.971-16.971l80 80c9.372 9.373 9.372 24.569 0 33.941l-80 80C409.956 271.982 384 261.456 384 240v-48H24c-13.255 0-24-10.745-24-24zm488 152H128v-48c0-21.314-25.862-32.08-40.971-16.971l-80 80c-9.372 9.373-9.372 24.569 0 33.941l80 80C102.057 463.997 128 453.437 128 432v-48h360c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z\"\n              ></path>\n            </svg>\n          </div>\n          <div className=\"col-12 col-md-5\">\n            <CurrencyElement\n              currencyOptions={currencyOptions}\n              selectedCurrency={currencyTo}\n              onChangeCurrency={(e) => setCurrencyTo(e.target.value)}\n              onChangeAmount={handleToAmountChange}\n              amount={toAmount}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}